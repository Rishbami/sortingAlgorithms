# Standard bubble sort with no optimisation
def bubble_sort(list_to_sort):
    for i in range(len(list_to_sort)):
        for j in range(len(list_to_sort)-1):
            if list_to_sort[j] > list_to_sort[j+1]:
                num = list_to_sort[j]
                list_to_sort[j] = list_to_sort[j+1]
                list_to_sort[j+1] = num
    return list_to_sort


# Improved bubble sort with the two 'standard' changes that we
# covered in the lesson.
swaps = 0
def bubble_sort_improved(list_to_sort):
    for i in range(len(list_to_sort)):
        swaps = 0
        for j in range(len(list_to_sort)-(i+1)):
            if list_to_sort[j] > list_to_sort[j+1]:
                swaps = swaps + 1
                num = list_to_sort[j]
                list_to_sort[j] = list_to_sort[j+1]
                list_to_sort[j+1] = num
        if swaps == 0:
            return list_to_sort
    return list_to_sort
